syntax = "proto3";

package shared;

service App {
  rpc submit(UserSubmission) returns (SubmitResponse);
  rpc mySubmissions(MySubmissionsRequest) returns (stream MySubmissionsResponse);
  rpc myTaskSubmissions(MyTaskSubmissionsRequest) returns (stream MySubmissionsResponse);
}

message SubmitResponse {
  string status = 1;
}

message MySubmissionsRequest {
  string userId = 2;
}

message MyTaskSubmissionsRequest {
  string problemId = 1;
  string userId = 2;
}

message MySubmissionsResponse {
  Result result = 1;
}

enum Language {
  python = 0;
}

message Solution {
  string code = 1;
  Language language = 2;
}

message UserSubmission {
  string problemId = 1;
  string userId = 2;
  Solution solution = 3;
}

message Problem {
  string problemId = 1;
  repeated string testInputs = 2;
  repeated Solution referenceSolutions = 3;
  double executionTimeThreshold = 4;
}

message Task {
  string taskId = 1;
  Problem problem = 2;
  UserSubmission userSubmission = 3;
}

// BEGIN Result definition

/*
In Kafka we use:
  - userId (string) as a topic name
  - problemId (string) as a key
  - result (Result) as a value
 */
message Result {
  oneof sealed_value {
    Success success = 1;
    Failure failure = 2;
  }
}

message Success {
  double duration = 1;
  Solution solution = 2;
}

message Failure {
  double duration = 1;
  Solution solution = 2;
}
// END Result definition
